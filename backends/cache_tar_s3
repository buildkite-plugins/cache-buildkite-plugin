#!/bin/bash

if [ -z "${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}" ]; then
  echo '+++ ðŸš¨ Missing S3 bucket configuration'
  exit 1
fi

build_key() {
  if [ -n "${BUILDKITE_PLUGIN_S3_CACHE_PREFIX}" ]; then
    echo "${BUILDKITE_PLUGIN_S3_CACHE_PREFIX}/${1}"
  else
    echo "$1"
  fi
}

verbose() {
  if [ -n "${BUILDKITE_PLUGIN_S3_CACHE_ONLY_SHOW_ERRORS}" ]; then
    echo "--only-show-errors"
  else
    echo ""
  fi
}

restore_cache() {
  local from="$1"
  local to="$2"
  local cachefile=cache.tar.gz
  aws s3 cp "s3://${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}/$(build_key "${from}")" "${cachefile}" "$(verbose)"
  if [ -e "${cachefile}" ]; then
    mkdir -p "$(dirname "${to}")"
    tar xzf "${cachefile}" -C "$(dirname "${to}")"
    rm "${cachefile}"
  fi
}

save_cache() {
  local to="$1"
  local from="$2"
  if [ -e "${from}" ]; then
    local cachefile=cache.tar.gz
    tar czf "${cachefile}" -C "$(dirname "${from}")" "$(basename "${from}")"
    aws s3 cp "${cachefile}" "s3://${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}/$(build_key "${to}")" "$(verbose)"
    rm "${cachefile}"
  else
    echo "no file(s) to cache found at: ${from}"
  fi
}

exists_cache() {
  if [ -z "$1" ]; then exit 1; fi
  [ "$(aws s3api list-objects-v2 --bucket "${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}" --prefix "$(build_key "$1")" --max-items 1 --query 'Contents')" != "null" ]
}

OPCODE="$1"
shift

if [ "$OPCODE" = 'exists' ]; then
  exists_cache "$@"
elif [ "$OPCODE" = 'get' ]; then
  restore_cache "$@"
elif [ "$OPCODE" = 'save' ]; then
  save_cache "$@"
else
  exit 255
fi
